name: Close Referenced Issues

on:
  schedule:
    - cron: '0 * * * *' # Runs every hour
  workflow_dispatch: # Allows manual triggering

jobs:
  close-referenced-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Get and Process Closed Issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: "azerothCore"
          SOURCE_REPO: "azerothcore-wotlk"
          OUR_OWNER: "chromiecraft"
          OUR_REPO: "chromiecraft"
        run: |
          # Fetch the last 20 closed issues from the external repo
          CLOSED_ISSUES=$(gh issue list -R "$REPO_OWNER/$SOURCE_REPO" --state closed --limit 20 --json number,body)

          echo "$CLOSED_ISSUES" # debug

          echo "Checking issues..."            
          # Process only if JSON is valid
          echo "$CLOSED_ISSUES" | jq -c '.[]' | while read issue; do
            ISSUE_NUMBER=$(echo "$issue" | jq -r '.number')
            BODY=$(echo "$issue" | jq -r '.body')

            # Extract issue references (eg. https://github.com/$OUR_OWNER/$OUR_REPO/issues/123)
            REFERENCES=$(echo "$BODY" | grep -oE "https://github.com/$OUR_OWNER/$OUR_REPO/issues/[0-9]+" | grep -oE '[0-9]+$' || true)

            # Skip if no references are found
            if [[ -z "$REFERENCES" ]]; then
              continue
            fi

            # Process each referenced issue
            for ISSUE_NUM in $REFERENCES; do
              # Check if the issue exists in our repo and if it's open
              ISSUE_STATE=$(gh issue view "$ISSUE_NUM" -R "$OUR_OWNER/$OUR_REPO" --json state --jq '.state' 2>/dev/null || echo "NOT_FOUND")

              if [[ "$ISSUE_STATE" == "CLOSED" ]]; then
                echo "Issue #$ISSUE_NUM is already closed. Skipping."
              elif [[ "$ISSUE_STATE" == "OPEN" ]]; then
                echo "Closing issue #$ISSUE_NUM in $OUR_OWNER/$OUR_REPO"
                gh issue close "$ISSUE_NUM" -R "$OUR_OWNER/$OUR_REPO" --reason "completed"
              else
                echo "Issue #$ISSUE_NUM not found in $OUR_OWNER/$OUR_REPO. Skipping."
              fi
            done
          done
